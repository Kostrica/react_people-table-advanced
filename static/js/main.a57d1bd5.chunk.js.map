{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","api/people.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Header","className","to","HomePage","API_URL","getPeople","url","options","fetch","then","res","json","request","PersonName","name","slug","sex","searchParams","cn","men","women","PersonRow","person","personSlug","born","died","father","mother","activeRow","PeopleTable","people","sortBy","sortOrder","handleSortChange","type","onClick","src","alt","map","id","PeoplePage","useState","setPeople","visualisedPeople","setVisualisedPeople","useEffect","requestPeople","newPeople","find","fatherName","motherName","uuidv4","history","useHistory","location","useLocation","useMemo","URLSearchParams","search","appliedQuery","get","query","setQuery","applyQuery","useCallback","debounce","newQuery","set","delete","push","toString","appliedToSortBy","setAppliedToSortBy","lowerQuery","toLowerCase","filter","includes","sort","personA","personB","localeCompare","placeholder","value","onChange","target","sortId","PageNotFound","App","exact","path","render","match","params","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a57d1bd5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header: React.FC = () => (\n  <div className=\"header\">\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        <li className=\"header__nav-item\">\n          <Link className=\"header__nav-link\" to=\"/home\">Home page</Link>\n        </li>\n        <li className=\"header__nav-item\">\n          <Link className=\"header__nav-link\" to=\"/people\">People page</Link>\n        </li>\n      </ul>\n    </nav>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <div className=\"container\">\n    <h2>Home page</h2>\n  </div>\n);\n","export const API_URL = 'https://mate-academy.github.io/react_people-table/api';\n\nexport const request = (url: any, options: any = {}) => {\n  return fetch(`${API_URL}${url}`, options)\n    .then(res => res.json());\n};\n\nexport const getPeople = () => request('/people.json');\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './PersonName.scss';\n\ninterface Props {\n  name: string,\n  slug: string,\n  sex: string,\n  searchParams: any,\n}\n\nexport const PersonName: React.FC<Props> = ({\n  name,\n  slug,\n  sex,\n  searchParams,\n}) => (\n  <Link\n    className={cn(\n      'PersonName',\n      { men: sex === 'm' },\n      { women: sex === 'f' },\n    )}\n    to={`/people/${slug}?${searchParams}`}\n  >\n    {name}\n  </Link>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { PersonName } from '../PersonName/PersonName';\n\nimport './PersonRow.scss';\n\ninterface Props {\n  person: PersonWithParents,\n  personSlug: string | undefined,\n  searchParams: any,\n}\n\nexport const PersonRow: React.FC<Props> = ({ person, personSlug, searchParams }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    father,\n    mother,\n    slug,\n  } = person;\n\n  return (\n    <tr className={cn(\n      'Person',\n      { activeRow: slug === personSlug },\n    )}\n    >\n      <td className=\"cell\">\n        {father || mother ? (\n          <PersonName\n            name={name}\n            slug={slug}\n            sex={sex}\n            searchParams={searchParams}\n          />\n        ) : (\n          <span className=\"no-parents\">{name}</span>\n        )}\n      </td>\n      <td className=\"cell center\">{sex}</td>\n      <td className=\"cell center\">{born}</td>\n      <td className=\"cell center\">{died}</td>\n      <td className=\"cell\">\n        <PersonName\n          name={mother?.name}\n          slug={mother?.slug}\n          sex={mother?.sex}\n          searchParams={searchParams}\n        />\n      </td>\n      <td className=\"cell\">\n        <PersonName\n          name={father?.name}\n          slug={father?.slug}\n          sex={father?.sex}\n          searchParams={searchParams}\n        />\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nimport './PeopleTable.scss';\n\ninterface Props {\n  people: PersonWithParents[],\n  personSlug: string | undefined,\n  searchParams: any,\n  sortBy: string,\n  sortOrder: string,\n  handleSortChange: any,\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  personSlug,\n  searchParams,\n  sortBy,\n  sortOrder,\n  handleSortChange,\n}) => (\n  <table className=\"PeopleTable\">\n    <thead className=\"PeopleTable__head\">\n      <tr>\n        <th className=\"head-cell name\">\n          <button\n            className={cn(\n              'button',\n              { 'button-active': sortBy === 'name' },\n            )}\n            type=\"button\"\n            onClick={() => {\n              handleSortChange('name');\n            }}\n          >\n            <span className=\"button-text\">Name</span>\n            {sortBy !== 'name' && (<img src=\"../../images/sort_both.png\" alt=\"img\" />)}\n            {(sortBy === 'name' && sortOrder === 'asc')\n            && (<img src=\"../../images/sort_asc.png\" alt=\"img\" />)}\n            {(sortBy === 'name' && sortOrder === 'desc')\n            && (<img src=\"../../images/sort_desc.png\" alt=\"img\" />)}\n          </button>\n        </th>\n        <th className=\"head-cell sex\">\n          <button\n            className={cn(\n              'button',\n              { 'button-active': sortBy === 'sex' },\n            )}\n            type=\"button\"\n            onClick={() => {\n              handleSortChange('sex');\n            }}\n          >\n            <span className=\"button-text\">Sex</span>\n            {sortBy !== 'sex' && (<img src=\"../../images/sort_both.png\" alt=\"img\" />)}\n            {(sortBy === 'sex' && sortOrder === 'asc')\n            && (<img src=\"../../images/sort_asc.png\" alt=\"img\" />)}\n            {(sortBy === 'sex' && sortOrder === 'desc')\n            && (<img src=\"../../images/sort_desc.png\" alt=\"img\" />)}\n          </button>\n        </th>\n        <th className=\"head-cell born\">\n          <button\n            className={cn(\n              'button',\n              { 'button-active': sortBy === 'born' },\n            )}\n            type=\"button\"\n            onClick={() => {\n              handleSortChange('born');\n            }}\n          >\n            <span className=\"button-text\">Born</span>\n            {sortBy !== 'born' && (<img src=\"../../images/sort_both.png\" alt=\"img\" />)}\n            {(sortBy === 'born' && sortOrder === 'asc')\n            && (<img src=\"../../images/sort_asc.png\" alt=\"img\" />)}\n            {(sortBy === 'born' && sortOrder === 'desc')\n            && (<img src=\"../../images/sort_desc.png\" alt=\"img\" />)}\n          </button>\n        </th>\n        <th className=\"head-cell died\">\n          <button\n            className={cn(\n              'button',\n              { 'button-active': sortBy === 'died' },\n            )}\n            type=\"button\"\n            onClick={() => {\n              handleSortChange('died');\n            }}\n          >\n            <span className=\"button-text\">Died</span>\n            {sortBy !== 'died' && (<img src=\"../../images/sort_both.png\" alt=\"img\" />)}\n            {(sortBy === 'died' && sortOrder === 'asc')\n            && (<img src=\"../../images/sort_asc.png\" alt=\"img\" />)}\n            {(sortBy === 'died' && sortOrder === 'desc')\n            && (<img src=\"../../images/sort_desc.png\" alt=\"img\" />)}\n          </button>\n        </th>\n        <th className=\"head-cell mother\">Mother</th>\n        <th className=\"head-cell father\">Father</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <PersonRow\n          key={person.id}\n          {...{ person }}\n          personSlug={personSlug}\n          searchParams={searchParams}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { useLocation, useHistory } from 'react-router';\nimport debounce from 'lodash.debounce';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { getPeople } from '../../api/people';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nimport './PeoplePage.scss';\n\nexport const PeoplePage: React.FC<any> = ({ personSlug }: MatchParams) => {\n  const [people, setPeople] = useState<PersonWithParents[]>([]);\n  const [visualisedPeople, setVisualisedPeople] = useState<PersonWithParents[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(requestPeople => {\n        const newPeople: Array<PersonWithParents> = requestPeople.map((person: Person) => {\n          const father: Person = requestPeople\n            .find(({ name }: Person) => name === person.fatherName);\n          const mother: Person = requestPeople\n            .find(({ name }: Person) => name === person.motherName);\n\n          return {\n            ...person,\n            father,\n            mother,\n            id: uuidv4(),\n          };\n        });\n\n        setPeople(newPeople);\n      });\n  }, []);\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = useMemo(() => new URLSearchParams(location.search), [location.search]);\n\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setQuery(appliedQuery);\n  }, [appliedQuery]);\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }, 500), [],\n  );\n\n  const handleQueryChange = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(target.value);\n    applyQuery(target.value);\n  };\n\n  const sortBy = searchParams.get('sortBy') || '';\n  const [appliedToSortBy, setAppliedToSortBy] = useState('');\n\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const handleSortChange = (value: string) => {\n    let sortId = 'asc';\n\n    if (value === appliedToSortBy) {\n      sortId = sortOrder === 'asc' ? 'desc' : 'asc';\n    }\n\n    searchParams.set('sortOrder', sortId);\n    searchParams.set('sortBy', value);\n\n    history.push({\n      search: searchParams.toString(),\n    });\n\n    setAppliedToSortBy(value);\n  };\n\n  useEffect(() => {\n    let newPeople = people;\n\n    if (appliedQuery) {\n      const lowerQuery = appliedQuery.toLowerCase();\n\n      newPeople = newPeople.filter(({ name, motherName, fatherName }) => (\n        name.toLowerCase().includes(lowerQuery)\n        || motherName?.toLowerCase().includes(lowerQuery)\n        || fatherName?.toLowerCase().includes(lowerQuery)\n      ));\n    } else {\n      newPeople = people;\n    }\n\n    if (sortBy) {\n      newPeople.sort((personA, personB): any => {\n        if (sortBy === 'name' || sortBy === 'sex') {\n          return sortOrder === 'asc'\n            ? personA[sortBy].localeCompare(personB[sortBy])\n            : personB[sortBy].localeCompare(personA[sortBy]);\n        }\n\n        if (sortBy === 'born' || sortBy === 'died') {\n          return sortOrder === 'asc'\n            ? personA[sortBy] - personB[sortBy]\n            : personB[sortBy] - personA[sortBy];\n        }\n\n        return null;\n      });\n    }\n\n    setVisualisedPeople(newPeople);\n  }, [appliedQuery, people, sortBy, sortOrder]);\n\n  useEffect(() => {\n    setVisualisedPeople(people);\n  }, [people]);\n\n  return (\n    <div className=\"container\">\n      <h2>People table</h2>\n\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Person's name\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n      </div>\n\n      <PeopleTable\n        people={visualisedPeople}\n        personSlug={personSlug}\n        searchParams={searchParams}\n        sortBy={sortBy}\n        sortOrder={sortOrder}\n        handleSortChange={handleSortChange}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => (\n  <div className=\"container\">\n    <h2>Page not found</h2>\n  </div>\n);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Header } from './components/Header/Header';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <Header />\n\n    <Switch>\n\n      <Route exact path=\"/home\">\n        <HomePage />\n      </Route>\n\n      <Route\n        exact\n        path=\"/people/:personSlug?\"\n        render={({ match }: MatchProps) => (\n          <PeoplePage personSlug={match.params.personSlug} />)}\n      />\n\n      <Redirect exact from=\"/\" to=\"/home\" />\n\n      <PageNotFound />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}